from collections import deque

def number_guessing_game(target_number, lower_bound, upper_bound):
    
    # Initialize BFS queue with the middle number of the range
    queue = deque()
    queue.append((lower_bound, upper_bound))
    num_guesses = 0
    
    while queue:
        current_lower, current_upper = queue.popleft()
        num_guesses += 1
        
        # Guess the middle number of the current range
        guess = (current_lower + current_upper) // 2
        print(f"Guessing: {guess}")
        
        if guess == target_number:
            print(f"Number guessed correctly in {num_guesses} guesses!")
            return num_guesses
        elif guess < target_number:
            # Update range to only include numbers higher than the guess
            queue.append((guess + 1, current_upper))
        else:
            # Update range to only include numbers lower than the guess
            queue.append((current_lower, guess - 1))
    
    print("Number not found within the given range.")
    return num_guesses

# Example usage
if __name__ == "__main__":
    import random

    lower_bound = 1
    upper_bound = 100
    target_number = random.randint(lower_bound, upper_bound)
    print(f"Target number (for debugging): {target_number}")

    number_guessing_game(target_number, lower_bound, upper_bound)
