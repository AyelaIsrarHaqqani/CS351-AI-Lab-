def number_guessing_game_dfs(target_number, lower_bound, upper_bound):
    
    def dfs(current_lower, current_upper, num_guesses):
        # Base case: check if the current range is valid
        if current_lower > current_upper:
            return None

        # Guess the middle number of the current range
        guess = (current_lower + current_upper) // 2
        print(f"Guessing: {guess}")
        num_guesses += 1

        if guess == target_number:
            print(f"Number guessed correctly in {num_guesses} guesses!")
            return num_guesses
        elif guess < target_number:
            # Recur on the right half of the range
            return dfs(guess + 1, current_upper, num_guesses)
        else:
            # Recur on the left half of the range
            return dfs(current_lower, guess - 1, num_guesses)

    # Start DFS search
    num_guesses = dfs(lower_bound, upper_bound, 0)
    if num_guesses is None:
        print("Number not found within the given range.")
    return num_guesses

# Example usage
if __name__ == "__main__":
    import random

    lower_bound = 1
    upper_bound = 100
    target_number = random.randint(lower_bound, upper_bound)
    print(f"Target number (for debugging): {target_number}")

    number_guessing_game_dfs(target_number, lower_bound, upper_bound)
